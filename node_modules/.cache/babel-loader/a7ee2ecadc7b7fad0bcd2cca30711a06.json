{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/AaronJoelKaemmerer-Karsten/react-corona/corona/src/components/Numbers.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\n\nfunction Numbers() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [total, setTotal] = useState(0);\n  useEffect(() => {\n    fetch(\"https://api.covid19api.com/summary\").then(res => res.json()).then(result => {\n      setIsLoaded(true);\n      setItems(result);\n      console.log(result.Global.TotalConfirmed);\n      setTotal(result.Global.TotalConfirmed);\n    }, // Note: it's important to handle errors here\n    // instead of a catch() block so that we don't swallow\n    // exceptions from actual bugs in components.\n    error => {\n      setIsLoaded(true);\n      setError(error);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"numbers\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"headline\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Corona\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Zahlen\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), total]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 10\n  }, this);\n}\n\n_s(Numbers, \"A3aEpUT7eWl7bv3SCq4YXNX6Rfs=\");\n\n_c = Numbers;\nexport default Numbers;\n\nvar _c;\n\n$RefreshReg$(_c, \"Numbers\");","map":{"version":3,"sources":["/Users/AaronJoelKaemmerer-Karsten/react-corona/corona/src/components/Numbers.js"],"names":["React","useState","useEffect","Numbers","error","setError","isLoaded","setIsLoaded","items","setItems","total","setTotal","fetch","then","res","json","result","console","log","Global","TotalConfirmed"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;;AAIA,SAASC,OAAT,GAAmB;AAAA;;AAEjB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBJ,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACK,QAAD,EAAWC,WAAX,IAA0BN,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBR,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAAES,KAAF,EAASC,QAAT,IAAsBV,QAAQ,CAAC,CAAD,CAApC;AAEEC,EAAAA,SAAS,CAAC,MAAM;AACZU,IAAAA,KAAK,CAAC,oCAAD,CAAL,CACGC,IADH,CACQC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADf,EAEGF,IAFH,CAGKG,MAAD,IAAY;AACVT,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAE,MAAAA,QAAQ,CAACO,MAAD,CAAR;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYF,MAAM,CAACG,MAAP,CAAcC,cAA1B;AACAT,MAAAA,QAAQ,CAACK,MAAM,CAACG,MAAP,CAAcC,cAAf,CAAR;AACD,KARL,EASI;AACA;AACA;AACChB,IAAAA,KAAD,IAAW;AACTG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACAF,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAfL;AAiBD,GAlBM,EAkBJ,EAlBI,CAAT;AAoBF,sBAAO;AAAK,IAAA,SAAS,EAAC,SAAf;AAAA,4BACH;AAAK,MAAA,SAAS,EAAC,UAAf;AAAA,8BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADG,EAKFM,KALE;AAAA;AAAA;AAAA;AAAA;AAAA,UAAP;AAOD;;GAlCQP,O;;KAAAA,O;AAoCT,eAAeA,OAAf","sourcesContent":["import React from 'react';\nimport {useState, useEffect} from 'react';\n\n\n\nfunction Numbers() {\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  const [ total, setTotal ] = useState(0);\n\n    useEffect(() => {\n        fetch(\"https://api.covid19api.com/summary\")\n          .then(res => res.json())\n          .then(\n            (result) => {\n              setIsLoaded(true);\n              setItems(result);\n              console.log(result.Global.TotalConfirmed);\n              setTotal(result.Global.TotalConfirmed);\n            },\n            // Note: it's important to handle errors here\n            // instead of a catch() block so that we don't swallow\n            // exceptions from actual bugs in components.\n            (error) => {\n              setIsLoaded(true);\n              setError(error);\n            }\n          )\n      }, [])\n \n  return <div className=\"numbers\">\n      <div className=\"headline\">\n          <h1>Corona</h1>\n          <h2>Zahlen</h2>\n      </div>\n      {total}\n  </div>;\n}\n \nexport default Numbers;"]},"metadata":{},"sourceType":"module"}