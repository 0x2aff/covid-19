{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/AaronJoelKaemmerer-Karsten/react-corona/corona/src/components/News.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\n\nfunction News() {\n  _s();\n\n  const [error, setError] = useState(null);\n  const [isLoaded, setIsLoaded] = useState(false);\n  const [items, setItems] = useState([]);\n  var allRepos;\n  const [appState, setAppState] = useState({\n    loading: null,\n    repos: null\n  });\n  useEffect(() => {\n    setAppState({\n      loading: true\n    });\n    const apiUrl = 'http://api.mediastack.com/v1/news?access_key=c0c5d36f2b0915afb0b0623c65134349&countries=de&keywords=corona';\n    axios.get(apiUrl).then(repos => {\n      allRepos = [repos.data];\n      setAppState({\n        loading: false,\n        repos: allRepos\n      });\n      console.log(allRepos);\n    });\n    setAppState({\n      repos: [...allRepos]\n    });\n  }, [setAppState]);\n  console.log(appState.repos);\n  console.log(appState.loading);\n\n  if (!appState) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"news\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 16\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"fetching...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 17\n    }, this);\n  }\n}\n\n_s(News, \"kbkRNleavVFw/41oixyL20gyff0=\");\n\n_c = News;\nexport default News;\n\nvar _c;\n\n$RefreshReg$(_c, \"News\");","map":{"version":3,"sources":["/Users/AaronJoelKaemmerer-Karsten/react-corona/corona/src/components/News.js"],"names":["React","useState","useEffect","axios","News","error","setError","isLoaded","setIsLoaded","items","setItems","allRepos","appState","setAppState","loading","repos","apiUrl","get","then","data","console","log"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,SAAlB,QAAkC,OAAlC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAKA,SAASC,IAAT,GAAgB;AAAA;;AACZ,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,IAAD,CAAlC;AACA,QAAM,CAACM,QAAD,EAAWC,WAAX,IAA0BP,QAAQ,CAAC,KAAD,CAAxC;AACA,QAAM,CAACQ,KAAD,EAAQC,QAAR,IAAoBT,QAAQ,CAAC,EAAD,CAAlC;AACA,MAAIU,QAAJ;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BZ,QAAQ,CAAC;AACrCa,IAAAA,OAAO,EAAE,IAD4B;AAErCC,IAAAA,KAAK,EAAE;AAF8B,GAAD,CAAxC;AAKMb,EAAAA,SAAS,CAAC,MAAM;AACdW,IAAAA,WAAW,CAAC;AAAEC,MAAAA,OAAO,EAAE;AAAX,KAAD,CAAX;AACA,UAAME,MAAM,GAAG,4GAAf;AACAb,IAAAA,KAAK,CAACc,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAwBH,KAAD,IAAW;AAC/BJ,MAAAA,QAAQ,GAAG,CAACI,KAAK,CAACI,IAAP,CAAX;AACDN,MAAAA,WAAW,CAAC;AAAEC,QAAAA,OAAO,EAAE,KAAX;AAAkBC,QAAAA,KAAK,EAAEJ;AAAzB,OAAD,CAAX;AACAS,MAAAA,OAAO,CAACC,GAAR,CAAYV,QAAZ;AACD,KAJD;AAKAE,IAAAA,WAAW,CAAC;AAACE,MAAAA,KAAK,EAAE,CAAC,GAAIJ,QAAL;AAAR,KAAD,CAAX;AACD,GATQ,EASN,CAACE,WAAD,CATM,CAAT;AAWAO,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACG,KAArB;AACAK,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,CAACE,OAArB;;AAGL,MAAG,CAACF,QAAJ,EAAa;AACV,wBAAO;AAAK,MAAA,SAAS,EAAC;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AAGF,GAJD,MAIK;AACD,wBAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACH;AAGL;;GAlCQR,I;;KAAAA,I;AAoCT,eAAeA,IAAf","sourcesContent":["import React from 'react';\nimport {useState, useEffect} from 'react';\nimport axios from 'axios';\n\n\n\n\nfunction News() {\n    const [error, setError] = useState(null);\n    const [isLoaded, setIsLoaded] = useState(false);\n    const [items, setItems] = useState([]);\n    var allRepos;\n    const [appState, setAppState] = useState({\n        loading: null,\n        repos: null,\n      });\n  \n          useEffect(() => {\n            setAppState({ loading: true });\n            const apiUrl = 'http://api.mediastack.com/v1/news?access_key=c0c5d36f2b0915afb0b0623c65134349&countries=de&keywords=corona';\n            axios.get(apiUrl).then((repos) => {\n               allRepos = [repos.data];\n              setAppState({ loading: false, repos: allRepos });\n              console.log(allRepos);\n            });\n            setAppState({repos: [... allRepos]})\n          }, [setAppState]);\n\n          console.log(appState.repos);\n          console.log(appState.loading);\n          \n  \n     if(!appState){\n        return <div className=\"news\">\n         \n         </div>;\n     }else{\n         return <p>fetching...</p>\n     }\n     \n  \n}\n \nexport default News;"]},"metadata":{},"sourceType":"module"}